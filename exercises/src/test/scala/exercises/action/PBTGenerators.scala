package exercises.action

import org.scalacheck.{Arbitrary, Gen}
import org.scalacheck.Arbitrary.arbitrary

import java.time.LocalDate
import java.time.format.DateTimeFormatter
import scala.util.{Random, Try}

object PBTGenerators {

  val yesNoGenerator: Gen[String] = Gen.oneOf("Y", "N")
  implicit val yesNoArb: Arbitrary[String] = Arbitrary(yesNoGenerator)

  import DateGenerator.dateGen
  // a generator of date time strings generated by using an "improper" formatter.
  val invalidDateTimeStrings: Gen[String] =
    dateGen.map { ld =>
      Try(ld.format(DateTimeFormatter.ISO_LOCAL_DATE))
    }.filter(_.isSuccess).map(_.get)
  implicit val invalideDateTimeStringsArb: Arbitrary[String] = Arbitrary(invalidDateTimeStrings)

  // a generator of valid DOB datetime strings
  val validDateTimeStrings: Gen[String] =
    dateGen.map { ld =>
      Try(ld.format(DateTimeFormatter.ofPattern("dd-MM-yyyy")))
    }.filter(_.isSuccess).map(_.get)
  implicit val validDateTimeStringsArb: Arbitrary[String] = Arbitrary(validDateTimeStrings)


}
